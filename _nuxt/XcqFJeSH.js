import{f as m,e as S}from"./DTq-QGyr.js";import{eP as b,eQ as x,eR as O,eS as D,eg as $,ed as F,eT as E,eU as q,eV as w,eW as T,ee as R,ef as G,eX as _,eY as C,cx as y,eZ as L,dB as M,e_ as v,e$ as H,f0 as U,f1 as k,f2 as B}from"./txgQZPFG.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},n=new t.Error().stack;n&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[n]="4927d9f9-bf25-4735-9431-f085d1dcfc12",t._sentryDebugIdIdentifier="sentry-dbid-4927d9f9-bf25-4735-9431-f085d1dcfc12")}catch{}})();function j(t){const{abi:n,data:a}=t,s=b(a,0,4),e=n.find(o=>o.type==="function"&&s===x(O(o)));if(!e)throw new D(s,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:e.name,args:"inputs"in e&&e.inputs&&e.inputs.length>0?$(e.inputs,b(a,4)):void 0}}const p="/docs/contract/encodeErrorResult";function A(t){const{abi:n,errorName:a,args:s}=t;let e=n[0];if(a){const u=F({abi:n,args:s,name:a});if(!u)throw new E(a,{docsPath:p});e=u}if(e.type!=="error")throw new E(void 0,{docsPath:p});const o=O(e),r=x(o);let c="0x";if(s&&s.length>0){if(!e.inputs)throw new q(e.name,{docsPath:p});c=w(e.inputs,s)}return T([r,c])}const h="/docs/contract/encodeFunctionResult";function W(t){const{abi:n,functionName:a,result:s}=t;let e=n[0];if(a){const r=F({abi:n,name:a});if(!r)throw new R(a,{docsPath:h});e=r}if(e.type!=="function")throw new R(void 0,{docsPath:h});if(!e.outputs)throw new G(e.name,{docsPath:h});const o=(()=>{if(e.outputs.length===0)return[];if(e.outputs.length===1)return[s];if(Array.isArray(s))return s;throw new _(s)})();return w(e.outputs,o)}const P="x-batch-gateway:true";async function I(t){const{data:n,ccipRequest:a}=t,{args:[s]}=j({abi:m,data:n}),e=[],o=[];return await Promise.all(s.map(async(r,c)=>{try{o[c]=r.urls.includes(P)?await I({data:r.data,ccipRequest:a}):await a(r),e[c]=!1}catch(u){e[c]=!0,o[c]=J(u)}})),W({abi:m,functionName:"query",result:[e,o]})}function J(t){return t.name==="HttpRequestError"&&t.status?A({abi:m,errorName:"HttpError",args:[t.status,t.shortMessage]}):A({abi:[C],errorName:"Error",args:["shortMessage"in t?t.shortMessage:t.message]})}class Q extends y{constructor({callbackSelector:n,cause:a,data:s,extraData:e,sender:o,urls:r}){var c;super(a.shortMessage||"An error occurred while fetching for an offchain result.",{cause:a,metaMessages:[...a.metaMessages||[],(c=a.metaMessages)!=null&&c.length?"":[],"Offchain Gateway Call:",r&&["  Gateway URL(s):",...r.map(u=>`    ${L(u)}`)],`  Sender: ${o}`,`  Data: ${s}`,`  Callback selector: ${n}`,`  Extra data: ${e}`].flat(),name:"OffchainLookupError"})}}class V extends y{constructor({result:n,url:a}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${L(a)}`,`Response: ${M(n)}`],name:"OffchainLookupResponseMalformedError"})}}class X extends y{constructor({sender:n,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${n}`],name:"OffchainLookupSenderMismatchError"})}}const ee="0x556f1830",Y={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function te(t,{blockNumber:n,blockTag:a,data:s,to:e}){const{args:o}=v({data:s,abi:[Y]}),[r,c,u,f,d]=o,{ccipRead:i}=t,g=i&&typeof(i==null?void 0:i.request)=="function"?i.request:Z;try{if(!H(e,r))throw new X({sender:r,to:e});const l=c.includes(P)?await I({data:u,ccipRequest:g}):await g({data:u,sender:r,urls:c}),{data:N}=await S(t,{blockNumber:n,blockTag:a,data:U([f,w([{type:"bytes"},{type:"bytes"}],[l,d])]),to:e});return N}catch(l){throw new Q({callbackSelector:f,cause:l,data:s,extraData:d,sender:r,urls:c})}}async function Z({data:t,sender:n,urls:a}){var e;let s=new Error("An unknown error occurred.");for(let o=0;o<a.length;o++){const r=a[o],c=r.includes("{data}")?"GET":"POST",u=c==="POST"?{data:t,sender:n}:void 0,f=c==="POST"?{"Content-Type":"application/json"}:{};try{const d=await fetch(r.replace("{sender}",n.toLowerCase()).replace("{data}",t),{body:JSON.stringify(u),headers:f,method:c});let i;if((e=d.headers.get("Content-Type"))!=null&&e.startsWith("application/json")?i=(await d.json()).data:i=await d.text(),!d.ok){s=new k({body:u,details:i!=null&&i.error?M(i.error):d.statusText,headers:d.headers,status:d.status,url:r});continue}if(!B(i)){s=new V({result:i,url:r});continue}return i}catch(d){s=new k({body:u,details:d.message,url:r})}}throw s}export{Z as ccipRequest,te as offchainLookup,Y as offchainLookupAbiItem,ee as offchainLookupSignature};
