{"version":3,"file":"G8ozBben.js","sources":["../../../../node_modules/@likecoin/iscn-js/dist/messages/likenft.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatMsgSellNFT = exports.formatMsgDeleteOffer = exports.formatMsgUpdateOffer = exports.formatMsgCreateOffer = exports.formatMsgBuyNFT = exports.formatMsgDeleteListing = exports.formatMsgUpdateListing = exports.formatMsgCreateListing = exports.formatMsgDeleteRoyaltyConfig = exports.formatMsgUpdateRoyaltyConfig = exports.formatMsgCreateRoyaltyConfig = exports.formatMsgBurnNFT = exports.formatMsgSend = exports.formatMsgMintNFT = exports.formatMsgUpdateClass = exports.formatMsgNewClass = void 0;\n// eslint-disable-next-line import/no-extraneous-dependencies\nconst long_1 = __importDefault(require(\"long\"));\nconst globalThis_1 = __importDefault(require(\"../globalThis\"));\nfunction formatMsgNewClass(senderAddress, iscnIdPrefix, nftClassData, classConfig) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgNewClass',\n        value: {\n            creator: senderAddress,\n            parent: {\n                type: 1,\n                iscnIdPrefix,\n            },\n            input: {\n                name: nftClassData.name,\n                symbol: nftClassData.symbol,\n                description: nftClassData.description,\n                uri: nftClassData.uri,\n                uriHash: nftClassData.uriHash,\n                metadata: globalThis_1.default.Buffer.from(JSON.stringify(Object.assign({}, (nftClassData.metadata || {}))), 'utf8'),\n                config: classConfig || {\n                    burnable: true,\n                },\n            },\n        },\n    };\n    return message;\n}\nexports.formatMsgNewClass = formatMsgNewClass;\nfunction formatMsgUpdateClass(senderAddress, classId, nftClassData, classConfig) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgUpdateClass',\n        value: {\n            creator: senderAddress,\n            classId,\n            input: Object.assign(Object.assign({}, nftClassData), { config: classConfig || {\n                    burnable: true,\n                } }),\n        },\n    };\n    return message;\n}\nexports.formatMsgUpdateClass = formatMsgUpdateClass;\nfunction formatMsgMintNFT(senderAddress, classId, nftData) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgMintNFT',\n        value: {\n            creator: senderAddress,\n            classId,\n            id: nftData.id,\n            input: {\n                uri: nftData.uri,\n                uriHash: nftData.uriHash,\n                metadata: globalThis_1.default.Buffer.from(JSON.stringify(Object.assign({}, (nftData.metadata || {}))), 'utf8'),\n            },\n        },\n    };\n    return message;\n}\nexports.formatMsgMintNFT = formatMsgMintNFT;\nfunction formatMsgSend(senderAddress, receiverAddress, classId, nftId) {\n    const message = {\n        typeUrl: '/cosmos.nft.v1beta1.MsgSend',\n        value: {\n            sender: senderAddress,\n            receiver: receiverAddress,\n            classId,\n            id: nftId,\n        },\n    };\n    return message;\n}\nexports.formatMsgSend = formatMsgSend;\nfunction formatMsgBurnNFT(senderAddress, classId, nftId) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgBurnNFT',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n        },\n    };\n    return message;\n}\nexports.formatMsgBurnNFT = formatMsgBurnNFT;\nfunction formatMsgCreateRoyaltyConfig(senderAddress, classId, royaltyConfig) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgCreateRoyaltyConfig',\n        value: {\n            creator: senderAddress,\n            classId,\n            royaltyConfig,\n        },\n    };\n    return message;\n}\nexports.formatMsgCreateRoyaltyConfig = formatMsgCreateRoyaltyConfig;\nfunction formatMsgUpdateRoyaltyConfig(senderAddress, classId, royaltyConfig) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgUpdateRoyaltyConfig',\n        value: {\n            creator: senderAddress,\n            classId,\n            royaltyConfig,\n        },\n    };\n    return message;\n}\nexports.formatMsgUpdateRoyaltyConfig = formatMsgUpdateRoyaltyConfig;\nfunction formatMsgDeleteRoyaltyConfig(senderAddress, classId) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgDeleteRoyaltyConfig',\n        value: {\n            creator: senderAddress,\n            classId,\n        },\n    };\n    return message;\n}\nexports.formatMsgDeleteRoyaltyConfig = formatMsgDeleteRoyaltyConfig;\nfunction formatMsgCreateListing(senderAddress, classId, nftId, price, expiration) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgCreateListing',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n            price: long_1.default.fromString(price),\n            expiration: expiration ? new Date(expiration) : new Date(Date.now() + 86400 * 180),\n        },\n    };\n    return message;\n}\nexports.formatMsgCreateListing = formatMsgCreateListing;\nfunction formatMsgUpdateListing(senderAddress, classId, nftId, price, expiration) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgUpdateListing',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n            price: long_1.default.fromString(price),\n            expiration: expiration ? new Date(expiration) : new Date(Date.now() + 86400 * 180),\n        },\n    };\n    return message;\n}\nexports.formatMsgUpdateListing = formatMsgUpdateListing;\nfunction formatMsgDeleteListing(senderAddress, classId, nftId) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgDeleteListing',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n        },\n    };\n    return message;\n}\nexports.formatMsgDeleteListing = formatMsgDeleteListing;\nfunction formatMsgBuyNFT(senderAddress, classId, nftId, seller, price) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgBuyNFT',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n            seller,\n            price: long_1.default.fromString(price),\n        },\n    };\n    return message;\n}\nexports.formatMsgBuyNFT = formatMsgBuyNFT;\nfunction formatMsgCreateOffer(senderAddress, classId, nftId, price, expiration) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgCreateOffer',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n            price: long_1.default.fromString(price),\n            expiration: expiration ? new Date(expiration) : new Date(Date.now() + 86400 * 180),\n        },\n    };\n    return message;\n}\nexports.formatMsgCreateOffer = formatMsgCreateOffer;\nfunction formatMsgUpdateOffer(senderAddress, classId, nftId, price, expiration) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgUpdateOffer',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n            price: long_1.default.fromString(price),\n            expiration: expiration ? new Date(expiration) : new Date(Date.now() + 86400 * 180),\n        },\n    };\n    return message;\n}\nexports.formatMsgUpdateOffer = formatMsgUpdateOffer;\nfunction formatMsgDeleteOffer(senderAddress, classId, nftId) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgDeleteOffer',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n        },\n    };\n    return message;\n}\nexports.formatMsgDeleteOffer = formatMsgDeleteOffer;\nfunction formatMsgSellNFT(senderAddress, classId, nftId, buyer, price) {\n    const message = {\n        typeUrl: '/likechain.likenft.v1.MsgSellNFT',\n        value: {\n            creator: senderAddress,\n            classId,\n            nftId,\n            buyer,\n            price: long_1.default.fromString(price),\n        },\n    };\n    return message;\n}\nexports.formatMsgSellNFT = formatMsgSellNFT;\n//# sourceMappingURL=likenft.js.map"],"names":["__importDefault","this","mod","likenft","formatMsgSellNFT_1","formatMsgDeleteOffer_1","formatMsgUpdateOffer_1","formatMsgCreateOffer_1","formatMsgBuyNFT_1","formatMsgDeleteListing_1","formatMsgUpdateListing_1","formatMsgCreateListing_1","formatMsgDeleteRoyaltyConfig_1","formatMsgUpdateRoyaltyConfig_1","formatMsgCreateRoyaltyConfig_1","formatMsgBurnNFT_1","formatMsgSend_1","formatMsgMintNFT_1","formatMsgUpdateClass_1","formatMsgNewClass_1","long_1","require$$0","globalThis_1","require$$1","formatMsgNewClass","senderAddress","iscnIdPrefix","nftClassData","classConfig","formatMsgUpdateClass","classId","formatMsgMintNFT","nftData","formatMsgSend","receiverAddress","nftId","formatMsgBurnNFT","formatMsgCreateRoyaltyConfig","royaltyConfig","formatMsgUpdateRoyaltyConfig","formatMsgDeleteRoyaltyConfig","formatMsgCreateListing","price","expiration","formatMsgUpdateListing","formatMsgDeleteListing","formatMsgBuyNFT","seller","formatMsgCreateOffer","formatMsgUpdateOffer","formatMsgDeleteOffer","formatMsgSellNFT","buyer"],"mappings":"muBACIA,EAAmBC,GAAQA,EAAK,iBAAoB,SAAUC,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,CAAI,CAC5D,EACA,OAAO,eAAeC,EAAS,aAAc,CAAE,MAAO,GAAM,EAC5D,IAAAC,EAAAD,EAAA,iBAA2BE,EAAAF,EAAA,qBAA+BG,EAAAH,EAAA,qBAA+BI,EAA+BJ,EAAA,qBAAAK,EAA0BL,EAAA,gBAAAM,EAAiCN,EAAA,uBAAAO,2BAAiCC,2BAAiCC,EAAAT,EAAA,6BAAuCU,EAAAV,EAAA,6BAAuCW,EAAAX,EAAA,6BAAuCY,EAAAZ,EAAA,iBAA2Ba,EAAQb,EAAA,cAAgBc,EAAQd,EAAA,iBAAmBe,yBAA+BC,EAAAhB,EAAA,kBAA4B,OAEnf,MAAMiB,EAASpB,EAAgBqB,CAAe,EACxCC,EAAetB,EAAgBuB,CAAwB,EAC7D,SAASC,EAAkBC,EAAeC,EAAcC,EAAcC,EAAa,CAsBxE,MArBS,CACZ,QAAS,oCACT,MAAO,CACH,QAASH,EACT,OAAQ,CACJ,KAAM,EACN,aAAAC,CACJ,EACA,MAAO,CACH,KAAMC,EAAa,KACnB,OAAQA,EAAa,OACrB,YAAaA,EAAa,YAC1B,IAAKA,EAAa,IAClB,QAASA,EAAa,QACtB,SAAUL,EAAa,QAAQ,OAAO,KAAK,KAAK,UAAU,OAAO,OAAO,GAAKK,EAAa,UAAY,CAAG,CAAA,CAAC,EAAG,MAAM,EACnH,OAAQC,GAAe,CACnB,SAAU,EAAA,CACd,CACJ,CAER,CAEJ,CACA,IAA4BT,EAAAhB,EAAA,kBAAAqB,EAC5B,SAASK,EAAqBJ,EAAeK,EAASH,EAAcC,EAAa,CAWtE,MAVS,CACZ,QAAS,uCACT,MAAO,CACH,QAASH,EACT,QAAAK,EACA,MAAO,OAAO,OAAO,OAAO,OAAO,CAAC,EAAGH,CAAY,EAAG,CAAE,OAAQC,GAAe,CACvE,SAAU,EAAA,CACX,CAAA,CAAA,CAEf,CAEJ,CACA,IAA+BV,EAAAf,EAAA,qBAAA0B,EAC/B,SAASE,EAAiBN,EAAeK,EAASE,EAAS,CAchD,MAbS,CACZ,QAAS,mCACT,MAAO,CACH,QAASP,EACT,QAAAK,EACA,GAAIE,EAAQ,GACZ,MAAO,CACH,IAAKA,EAAQ,IACb,QAASA,EAAQ,QACjB,SAAUV,EAAa,QAAQ,OAAO,KAAK,KAAK,UAAU,OAAO,OAAO,GAAKU,EAAQ,UAAY,CAAG,CAAA,CAAC,EAAG,MAAM,CAAA,CAClH,CAER,CAEJ,CACA,IAA2Bf,EAAAd,EAAA,iBAAA4B,EAC3B,SAASE,EAAcR,EAAeS,EAAiBJ,EAASK,EAAO,CAU5D,MATS,CACZ,QAAS,8BACT,MAAO,CACH,OAAQV,EACR,SAAUS,EACV,QAAAJ,EACA,GAAIK,CAAA,CAEZ,CAEJ,CACA,IAAwBnB,EAAAb,EAAA,cAAA8B,EACxB,SAASG,EAAiBX,EAAeK,EAASK,EAAO,CAS9C,MARS,CACZ,QAAS,mCACT,MAAO,CACH,QAASV,EACT,QAAAK,EACA,MAAAK,CAAA,CAER,CAEJ,CACA,IAA2BpB,EAAAZ,EAAA,iBAAAiC,EAC3B,SAASC,EAA6BZ,EAAeK,EAASQ,EAAe,CASlE,MARS,CACZ,QAAS,+CACT,MAAO,CACH,QAASb,EACT,QAAAK,EACA,cAAAQ,CAAA,CAER,CAEJ,CACA,IAAuCxB,EAAAX,EAAA,6BAAAkC,EACvC,SAASE,EAA6Bd,EAAeK,EAASQ,EAAe,CASlE,MARS,CACZ,QAAS,+CACT,MAAO,CACH,QAASb,EACT,QAAAK,EACA,cAAAQ,CAAA,CAER,CAEJ,CACA,IAAuCzB,EAAAV,EAAA,6BAAAoC,EACvC,SAASC,EAA6Bf,EAAeK,EAAS,CAQnD,MAPS,CACZ,QAAS,+CACT,MAAO,CACH,QAASL,EACT,QAAAK,CAAA,CAER,CAEJ,CACA,IAAuClB,EAAAT,EAAA,6BAAAqC,EACvC,SAASC,EAAuBhB,EAAeK,EAASK,EAAOO,EAAOC,EAAY,CAWvE,MAVS,CACZ,QAAS,yCACT,MAAO,CACH,QAASlB,EACT,QAAAK,EACA,MAAAK,EACA,MAAOf,EAAO,QAAQ,WAAWsB,CAAK,EACtC,WAAYC,EAAa,IAAI,KAAKA,CAAU,EAAI,IAAI,KAAK,KAAK,MAAQ,OAAW,CAAA,CAEzF,CAEJ,CACA,IAAiChC,EAAAR,EAAA,uBAAAsC,EACjC,SAASG,EAAuBnB,EAAeK,EAASK,EAAOO,EAAOC,EAAY,CAWvE,MAVS,CACZ,QAAS,yCACT,MAAO,CACH,QAASlB,EACT,QAAAK,EACA,MAAAK,EACA,MAAOf,EAAO,QAAQ,WAAWsB,CAAK,EACtC,WAAYC,EAAa,IAAI,KAAKA,CAAU,EAAI,IAAI,KAAK,KAAK,MAAQ,OAAW,CAAA,CAEzF,CAEJ,CACA,IAAiCjC,EAAAP,EAAA,uBAAAyC,EACjC,SAASC,EAAuBpB,EAAeK,EAASK,EAAO,CASpD,MARS,CACZ,QAAS,yCACT,MAAO,CACH,QAASV,EACT,QAAAK,EACA,MAAAK,CAAA,CAER,CAEJ,CACA,IAAiC1B,EAAAN,EAAA,uBAAA0C,EACjC,SAASC,EAAgBrB,EAAeK,EAASK,EAAOY,EAAQL,EAAO,CAW5D,MAVS,CACZ,QAAS,kCACT,MAAO,CACH,QAASjB,EACT,QAAAK,EACA,MAAAK,EACA,OAAAY,EACA,MAAO3B,EAAO,QAAQ,WAAWsB,CAAK,CAAA,CAE9C,CAEJ,CACA,IAA0BlC,EAAAL,EAAA,gBAAA2C,EAC1B,SAASE,EAAqBvB,EAAeK,EAASK,EAAOO,EAAOC,EAAY,CAWrE,MAVS,CACZ,QAAS,uCACT,MAAO,CACH,QAASlB,EACT,QAAAK,EACA,MAAAK,EACA,MAAOf,EAAO,QAAQ,WAAWsB,CAAK,EACtC,WAAYC,EAAa,IAAI,KAAKA,CAAU,EAAI,IAAI,KAAK,KAAK,MAAQ,OAAW,CAAA,CAEzF,CAEJ,CACA,IAA+BpC,EAAAJ,EAAA,qBAAA6C,EAC/B,SAASC,EAAqBxB,EAAeK,EAASK,EAAOO,EAAOC,EAAY,CAWrE,MAVS,CACZ,QAAS,uCACT,MAAO,CACH,QAASlB,EACT,QAAAK,EACA,MAAAK,EACA,MAAOf,EAAO,QAAQ,WAAWsB,CAAK,EACtC,WAAYC,EAAa,IAAI,KAAKA,CAAU,EAAI,IAAI,KAAK,KAAK,MAAQ,OAAW,CAAA,CAEzF,CAEJ,CACA,IAA+BrC,EAAAH,EAAA,qBAAA8C,EAC/B,SAASC,EAAqBzB,EAAeK,EAASK,EAAO,CASlD,MARS,CACZ,QAAS,uCACT,MAAO,CACH,QAASV,EACT,QAAAK,EACA,MAAAK,CAAA,CAER,CAEJ,CACA,IAA+B9B,EAAAF,EAAA,qBAAA+C,EAC/B,SAASC,EAAiB1B,EAAeK,EAASK,EAAOiB,EAAOV,EAAO,CAW5D,MAVS,CACZ,QAAS,mCACT,MAAO,CACH,QAASjB,EACT,QAAAK,EACA,MAAAK,EACA,MAAAiB,EACA,MAAOhC,EAAO,QAAQ,WAAWsB,CAAK,CAAA,CAE9C,CAEJ,CACAtC,EAAAD,EAAA,iBAA2BgD","x_google_ignoreList":[0]}