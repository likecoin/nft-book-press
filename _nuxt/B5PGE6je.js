import{e as m,c as P}from"./bz-3DZyA.js";import{fd as g,fe as O,ff as x,fg as q,eE as S,eB as F,fh as E,fi as $,fj as w,fk as C,eC as k,eD as G,fl as T,fm as _,da as y,fn as L,d_ as M,fo as v,fp as H,fq as j,fr as R,fs as B}from"./E33ysz1m.js";(function(){try{var t=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},n=new t.Error().stack;n&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[n]="2bc2538f-fff1-4d47-8605-d4b0cfc70028",t._sentryDebugIdIdentifier="sentry-dbid-2bc2538f-fff1-4d47-8605-d4b0cfc70028")}catch{}})();function U(t){const{abi:n,data:a}=t,s=g(a,0,4),e=n.find(o=>o.type==="function"&&s===O(x(o)));if(!e)throw new q(s,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:e.name,args:"inputs"in e&&e.inputs&&e.inputs.length>0?S(e.inputs,g(a,4)):void 0}}const p="/docs/contract/encodeErrorResult";function A(t){const{abi:n,errorName:a,args:s}=t;let e=n[0];if(a){const u=F({abi:n,args:s,name:a});if(!u)throw new E(a,{docsPath:p});e=u}if(e.type!=="error")throw new E(void 0,{docsPath:p});const o=x(e),r=O(o);let c="0x";if(s&&s.length>0){if(!e.inputs)throw new $(e.name,{docsPath:p});c=w(e.inputs,s)}return C([r,c])}const h="/docs/contract/encodeFunctionResult";function J(t){const{abi:n,functionName:a,result:s}=t;let e=n[0];if(a){const r=F({abi:n,name:a});if(!r)throw new k(a,{docsPath:h});e=r}if(e.type!=="function")throw new k(void 0,{docsPath:h});if(!e.outputs)throw new G(e.name,{docsPath:h});const o=(()=>{if(e.outputs.length===0)return[];if(e.outputs.length===1)return[s];if(Array.isArray(s))return s;throw new T(s)})();return w(e.outputs,o)}const D="x-batch-gateway:true";async function I(t){const{data:n,ccipRequest:a}=t,{args:[s]}=U({abi:m,data:n}),e=[],o=[];return await Promise.all(s.map(async(r,c)=>{try{o[c]=r.urls.includes(D)?await I({data:r.data,ccipRequest:a}):await a(r),e[c]=!1}catch(u){e[c]=!0,o[c]=W(u)}})),J({abi:m,functionName:"query",result:[e,o]})}function W(t){return t.name==="HttpRequestError"&&t.status?A({abi:m,errorName:"HttpError",args:[t.status,t.shortMessage]}):A({abi:[_],errorName:"Error",args:["shortMessage"in t?t.shortMessage:t.message]})}class z extends y{constructor({callbackSelector:n,cause:a,data:s,extraData:e,sender:o,urls:r}){var c;super(a.shortMessage||"An error occurred while fetching for an offchain result.",{cause:a,metaMessages:[...a.metaMessages||[],(c=a.metaMessages)!=null&&c.length?"":[],"Offchain Gateway Call:",r&&["  Gateway URL(s):",...r.map(u=>`    ${L(u)}`)],`  Sender: ${o}`,`  Data: ${s}`,`  Callback selector: ${n}`,`  Extra data: ${e}`].flat(),name:"OffchainLookupError"})}}class K extends y{constructor({result:n,url:a}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${L(a)}`,`Response: ${M(n)}`],name:"OffchainLookupResponseMalformedError"})}}class Q extends y{constructor({sender:n,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${n}`],name:"OffchainLookupSenderMismatchError"})}}const ee="0x556f1830",V={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function te(t,{blockNumber:n,blockTag:a,data:s,to:e}){const{args:o}=v({data:s,abi:[V]}),[r,c,u,d,f]=o,{ccipRead:i}=t,b=i&&typeof(i==null?void 0:i.request)=="function"?i.request:X;try{if(!H(e,r))throw new Q({sender:r,to:e});const l=c.includes(D)?await I({data:u,ccipRequest:b}):await b({data:u,sender:r,urls:c}),{data:N}=await P(t,{blockNumber:n,blockTag:a,data:j([d,w([{type:"bytes"},{type:"bytes"}],[l,f])]),to:e});return N}catch(l){throw new z({callbackSelector:d,cause:l,data:s,extraData:f,sender:r,urls:c})}}async function X({data:t,sender:n,urls:a}){var e;let s=new Error("An unknown error occurred.");for(let o=0;o<a.length;o++){const r=a[o],c=r.includes("{data}")?"GET":"POST",u=c==="POST"?{data:t,sender:n}:void 0,d=c==="POST"?{"Content-Type":"application/json"}:{};try{const f=await fetch(r.replace("{sender}",n.toLowerCase()).replace("{data}",t),{body:JSON.stringify(u),headers:d,method:c});let i;if((e=f.headers.get("Content-Type"))!=null&&e.startsWith("application/json")?i=(await f.json()).data:i=await f.text(),!f.ok){s=new R({body:u,details:i!=null&&i.error?M(i.error):f.statusText,headers:f.headers,status:f.status,url:r});continue}if(!B(i)){s=new K({result:i,url:r});continue}return i}catch(f){s=new R({body:u,details:f.message,url:r})}}throw s}export{X as ccipRequest,te as offchainLookup,V as offchainLookupAbiItem,ee as offchainLookupSignature};
