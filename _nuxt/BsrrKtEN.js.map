{"version":3,"file":"BsrrKtEN.js","sources":["../../../../utils/api.ts","../../../../stores/liker.ts","../../../../stores/user.ts"],"sourcesContent":["export interface FetchLikerInfoResult {\n  user: string\n  displayName: string\n  avatar: string\n  wallet: string\n  cosmosWallet: string\n  likeWallet: string\n  evmWallet: string\n  isSubscribedCivicLiker: boolean\n  civicLikerSince: number\n  description: string\n}\n\nexport async function useFetchLikerInfoById (likerId: string) {\n  const { LIKE_CO_API } = useRuntimeConfig().public\n  const url = `${LIKE_CO_API}/users/id/${likerId}/min`\n  const result = await $fetch<FetchLikerInfoResult>(url)\n  return result\n}\n\nexport async function useFetchLikerInfoByWallet (wallet: string, { nocache = false } = {}) {\n  const { LIKE_CO_API } = useRuntimeConfig().public\n  const timestamp = nocache ? `?ts=${Math.round(new Date().getTime() / 1000)}` : ''\n  const url = `${LIKE_CO_API}/users/addr/${wallet}/min${timestamp}`\n  const result = await $fetch<FetchLikerInfoResult>(url)\n  return result\n}\n","import { defineStore } from 'pinia'\n\nimport type { FetchLikerInfoResult } from '../utils/api'\n\nexport const useLikerStore = defineStore('liker', () => {\n  const likerInfoMapById = ref({} as Record<string, FetchLikerInfoResult>)\n\n  const likerIdMapByWallet = computed(() => {\n    return Object.entries(likerInfoMapById.value).reduce((acc, [likerId, likerInfo]) => {\n      acc[likerInfo.likeWallet] = likerId\n      acc[likerInfo.evmWallet] = likerId\n      return acc\n    }, {} as Record<string, string>)\n  })\n\n  const getLikerInfoById = computed(() => (likerId: string) => {\n    return likerInfoMapById.value[likerId] || null\n  })\n\n  const getLikerInfoByWallet = computed(() => (wallet: string) => {\n    return getLikerInfoById.value(likerIdMapByWallet.value[wallet])\n  })\n\n  const getChannelInfoById = computed(() => (channelId: string) => {\n    const likerId = convertChannelIdToLikerId(channelId)\n    return getLikerInfoById.value(likerId)\n  })\n\n  async function fetchLikerInfoById (likerId: string) {\n    try {\n      const result = await useFetchLikerInfoById(likerId)\n      const likerInfo = result\n      if (!likerInfo) {\n        throw new Error('Missing data in `fetchLikerInfoById`')\n      }\n      likerInfoMapById.value[likerId] = likerInfo\n      return likerInfo\n    } catch {\n      return null\n    }\n  }\n\n  async function lazyFetchLikerInfoById (likerId: string) {\n    if (likerInfoMapById.value[likerId]) {\n      return likerInfoMapById.value[likerId]\n    }\n\n    const likerInfo = await fetchLikerInfoById(likerId)\n    return likerInfo\n  }\n\n  async function fetchLikerInfoByWallet (wallet: string, { nocache = false } = {}) {\n    try {\n      const result = await useFetchLikerInfoByWallet(wallet, { nocache })\n      const likerInfo = result\n      if (!likerInfo) {\n        throw new Error('Missing data in `fetchLikerInfoByWallet`')\n      }\n      likerInfoMapById.value[likerInfo.user] = likerInfo\n      return likerInfo\n    } catch {\n      return null\n    }\n  }\n\n  async function lazyFetchLikerInfoByWallet (wallet: string) {\n    const likerId = likerIdMapByWallet.value[wallet]\n    if (likerId) {\n      return lazyFetchLikerInfoById(likerId)\n    }\n\n    const likerInfo = await fetchLikerInfoByWallet(wallet)\n    return likerInfo\n  }\n\n  async function lazyFetchChannelInfoById (channelId: string) {\n    const likerId = convertChannelIdToLikerId(channelId)\n    const result = await lazyFetchLikerInfoById(likerId)\n    return result\n  }\n\n  return {\n    likerInfoMapById,\n    likerIdMapByWallet,\n    getLikerInfoById,\n    getLikerInfoByWallet,\n    getChannelInfoById,\n    fetchLikerInfoById,\n    lazyFetchLikerInfoById,\n    fetchLikerInfoByWallet,\n    lazyFetchLikerInfoByWallet,\n    lazyFetchChannelInfoById\n  }\n})\n","import { defineStore, storeToRefs } from 'pinia'\n\nimport { useBookStoreApiStore } from './book-store-api'\nimport { useLikerStore } from './liker'\n\nexport const useUserStore = defineStore('user', () => {\n  const { LIKE_CO_API } = useRuntimeConfig().public\n\n  const bookStoreApiStore = useBookStoreApiStore()\n  const { token, isAuthenticated, wallet } = storeToRefs(bookStoreApiStore)\n  const likerStore = useLikerStore()\n\n  const bookUser = ref<any>(null)\n  const isUpdatingBookUserProfile = ref(false)\n  const userLikerInfo = computed(() => {\n    if (isAuthenticated.value && wallet.value) {\n      return likerStore.getLikerInfoByWallet(wallet.value)\n    }\n    return null\n  })\n  const isFetchingUserLikerInfo = ref(false)\n\n  async function fetchBookUserProfile () {\n    const data = await $fetch(\n      `${LIKE_CO_API}/likernft/book/user/profile`,\n      {\n        headers: {\n          authorization: `Bearer ${token.value}`\n        }\n      }\n    )\n    bookUser.value = data\n    return bookUser.value\n  }\n\n  async function lazyFetchBookUserProfile () {\n    if (bookUser.value) {\n      return bookUser.value\n    }\n    try {\n      const user = await fetchBookUserProfile()\n      return user\n    } catch (e: unknown) {\n      if ((e as Error).message !== 'USER_NOT_FOUND') {\n        // eslint-disable-next-line no-console\n        console.error(e)\n      }\n    }\n  }\n\n  async function updateBookUserProfile (payload: any) {\n    try {\n      isUpdatingBookUserProfile.value = true\n      await $fetch(`${LIKE_CO_API}/likernft/book/user/profile`, {\n        method: 'POST',\n        body: payload,\n        headers: {\n          authorization: `Bearer ${token.value}`\n        }\n      })\n      bookUser.value = { ...bookUser.value, ...payload }\n      return bookUser.value\n    } finally {\n      isUpdatingBookUserProfile.value = false\n    }\n  }\n\n  async function fetchUserLikerInfo ({ nocache = false } = {}) {\n    if (!isAuthenticated.value) {\n      return null\n    }\n    try {\n      isFetchingUserLikerInfo.value = true\n      const likerInfo = await likerStore.fetchLikerInfoByWallet(wallet.value, { nocache })\n      return likerInfo\n    } finally {\n      isFetchingUserLikerInfo.value = false\n    }\n  }\n\n  async function lazyFetchUserLikerInfo () {\n    if (!isAuthenticated.value) {\n      return null\n    }\n    if (userLikerInfo.value) {\n      return userLikerInfo.value\n    }\n    const likerInfo = await fetchUserLikerInfo()\n    return likerInfo\n  }\n\n  watch(isAuthenticated, () => {\n    if (isAuthenticated.value) {\n      lazyFetchUserLikerInfo()\n      lazyFetchBookUserProfile()\n    } else {\n      bookUser.value = null\n    }\n  })\n\n  return {\n    bookUser,\n    isUpdatingBookUserProfile,\n    userLikerInfo,\n    isFetchingUserLikerInfo,\n    fetchBookUserProfile,\n    lazyFetchBookUserProfile,\n    updateBookUserProfile,\n    fetchUserLikerInfo,\n    lazyFetchUserLikerInfo\n  }\n})\n"],"names":["useFetchLikerInfoById","likerId","LIKE_CO_API","useRuntimeConfig","url","useFetchLikerInfoByWallet","wallet","nocache","timestamp","useLikerStore","defineStore","likerInfoMapById","ref","likerIdMapByWallet","computed","acc","likerInfo","getLikerInfoById","getLikerInfoByWallet","getChannelInfoById","channelId","convertChannelIdToLikerId","fetchLikerInfoById","lazyFetchLikerInfoById","fetchLikerInfoByWallet","lazyFetchLikerInfoByWallet","lazyFetchChannelInfoById","useUserStore","bookStoreApiStore","useBookStoreApiStore","token","isAuthenticated","storeToRefs","likerStore","bookUser","isUpdatingBookUserProfile","userLikerInfo","isFetchingUserLikerInfo","fetchBookUserProfile","data","lazyFetchBookUserProfile","e","updateBookUserProfile","payload","fetchUserLikerInfo","lazyFetchUserLikerInfo","watch"],"mappings":"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"}